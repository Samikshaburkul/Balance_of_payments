x="Log-transformed Net Acquisition of Financial Assets",
y="Number of Countries") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Plotting the boxplot
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
y="Log-transformed Net Acquisition of Financial Assets") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Determine the 1st and 3rd quartiles and IQR
Q1 <- quantile(log_data_2020, 0.25)
Q3 <- quantile(log_data_2020, 0.75)
IQR_value <- IQR(log_data_2020)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.shape=NA) +
geom_hline(yintercept = median(log_data_2020), linetype="dashed", color = "red", size=0.5) +  # Median line
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
x = "Net Acquisition of Financial Assets",
y="Log-transformed Net Acquisition of Financial Assets") +
theme_minimal() +
coord_cartesian(ylim=c(Q1 - 0.5*IQR_value, Q3 + 0.5*IQR_value))
# filter the data for the two indicators
equity_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Equity and Investment Fund Shares, US Dollars", ]
debt_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Debt Securities, US Dollars", ]
# Calculate the mean for the years 2015-2020 for each country
equity_data$mean_equity <- rowMeans(equity_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
debt_data$mean_debt <- rowMeans(debt_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Merge the datasets by country
merged_data <- merge(equity_data[,c("Country", "mean_equity")], debt_data[,c("Country", "mean_debt")], by="Country")
# Calculate the correlation
correlation <- cor(merged_data$mean_equity, merged_data$mean_debt, use="complete.obs")
correlation
# Load necessary libraries
library(ggplot2)
# filter the data for the two indicators
equity_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Equity and Investment Fund Shares, US Dollars", ]
debt_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Debt Securities, US Dollars", ]
# Calculate the mean for the years 2015-2020 for each country
equity_data$mean_equity <- rowMeans(equity_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
debt_data$mean_debt <- rowMeans(debt_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Merge the datasets by country
merged_data <- merge(equity_data[,c("Country", "mean_equity")], debt_data[,c("Country", "mean_debt")], by="Country")
# Create a new column to identify whether the country is a top economy or emerging
merged_data$Type <- ifelse(merged_data$Country %in% top_10_Economic_Countries, "Top Economy", "Emerging Country")
# Scatter plot differentiating between the top 10 economies and the top 10 emerging countries
ggplot(merged_data, aes(x=mean_equity, y=mean_debt, color=Type)) +
geom_point(aes(shape=Type), size=3) +
geom_smooth(method="lm", se=FALSE, color="red", linetype="dashed") +  # Add a linear regression line
labs(title="Average Equity vs. Average Debt Securities (2015-2020)",
x="Average Equity and Investment Fund Shares",
y="Average Debt Securities") +
theme(legend.position="right", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values=c("Top Economy"="blue", "Emerging Country"="red")) +
scale_shape_manual(values=c("Top Economy"=19, "Emerging Country"=17))
# Load necessary libraries
library(ggplot2)
# filter the data for the two indicators
equity_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Equity and Investment Fund Shares, US Dollars", ]
debt_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Debt Securities, US Dollars", ]
# Calculate the mean for the years 2015-2020 for each country
equity_data$mean_equity <- rowMeans(equity_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
debt_data$mean_debt <- rowMeans(debt_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Merge the datasets by country
merged_data <- merge(equity_data[,c("Country", "mean_equity")], debt_data[,c("Country", "mean_debt")], by="Country")
# Create a new column to identify whether the country is a top economy or emerging
merged_data$Type <- ifelse(merged_data$Country %in% top_10_Economic_Countries, "Top Economy", "Emerging Country")
# Scatter plot differentiating between the top 10 economies and the top 10 emerging countries
ggplot(merged_data, aes(x=mean_equity, y=mean_debt, color=Type)) +
geom_point(aes(shape=Type), size=3) +
labs(title="Average Equity vs. Average Debt Securities (2015-2020)",
x="Average Equity and Investment Fund Shares",
y="Average Debt Securities") +
theme(legend.position="right", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values=c("Top Economy"="blue", "Emerging Country"="red")) +
scale_shape_manual(values=c("Top Economy"=19, "Emerging Country"=17))
# Load necessary libraries
library(ggplot2)
# filter the data for the two indicators
equity_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Equity and Investment Fund Shares, US Dollars", ]
debt_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Debt Securities, US Dollars", ]
# Calculate the mean for the years 2015-2020 for each country
equity_data$mean_equity <- rowMeans(equity_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
debt_data$mean_debt <- rowMeans(debt_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Merge the datasets by country
merged_data <- merge(equity_data[,c("Country", "mean_equity")], debt_data[,c("Country", "mean_debt")], by="Country")
# Create a new column to identify whether the country is a top economy or emerging
merged_data$Type <- ifelse(merged_data$Country %in% top_10_Economic_Countries, "Top Economy", "Emerging Country")
# Scatter plot differentiating between the top 10 economies and the top 10 emerging countries
ggplot(merged_data, aes(x=mean_equity, y=mean_debt, color=Type)) +
geom_point(aes(shape=Type), size=3) +
labs(title="Average Equity vs. Average Debt Securities (2015-2020)",
x="Average Equity and Investment Fund Shares",
y="Average Debt Securities") +
theme(legend.position="right", plot.title=element_text(hjust=0.5)) +
scale_color_manual(values=c("Top Economy"="blue", "Emerging Country"="red")) +
scale_shape_manual(values=c("Top Economy"=19, "Emerging Country"=17))
# Load necessary libraries
library(ggplot2)
# Filter data for 'Reserve Position in the Fund'
reserve_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Supplementary Items, Reserve Position in the Fund (with Fund Record), US Dollars", c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")]
# Calculate the average for each country over the years 2015-2020
reserve_data$mean_reserve <- rowMeans(reserve_data, na.rm = TRUE)
# Calculate variance
variance <- var(reserve_data$mean_reserve, na.rm = TRUE)
# Plot Histogram
hist(reserve_data$mean_reserve, main="Distribution of Average Reserve Position in the Fund (2015-2020)", xlab="Average Reserve Position in the Fund", breaks=50)
# Plot Boxplot
boxplot(reserve_data$mean_reserve, main="Boxplot of Average Reserve Position in the Fund (2015-2020)", ylab="Average Reserve Position in the Fund")
# Extracting data
supplementary_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Supplementary Items, Total Current + Capital Account, US Dollars", ]
financial_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars", ]
# Calculating averages for 2015-2020
supplementary_accnts_data$average <- rowMeans(supplementary_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
financial_accnts_data$average <- rowMeans(financial_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# T-test
t_test_result <- t.test(supplementary_accnts_data$average, financial_accnts_data$average)
# Print the t-test result
print(t_test_result)
# Boxplot
boxplot(supplementary_accnts_data$average, financial_accnts_data$average, names=c("Supplementary Items", "Financial Account"), main="Comparison of Averages", ylab="Value", xlab="Dataset")
# Extracting data
supplementary_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Supplementary Items, Total Current + Capital Account, US Dollars", ]
financial_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars", ]
# Calculating averages for 2015-2020
supplementary_accnts_data$average <- rowMeans(supplementary_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
financial_accnts_data$average <- rowMeans(financial_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# T-test
t_test_result <- t.test(supplementary_accnts_data$average, financial_accnts_data$average)
# Print the t-test result
print(t_test_result)
# Boxplot
boxplot(supplementary_accnts_data$average, financial_accnts_data$average, names=c("Total Current + Capital Account", "Net Acquisition of Financial Assets"), main="Comparison of Averages", ylab="Value", xlab="Dataset")
# filter the data for the two indicators
equity_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Equity and Investment Fund Shares, US Dollars", ]
debt_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, Debt Securities, US Dollars", ]
# Calculate the mean for the years 2015-2020 for each country
equity_data$mean_equity <- rowMeans(equity_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
debt_data$mean_debt <- rowMeans(debt_data[,c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Merge the datasets by country
merged_data <- merge(equity_data[,c("Country", "mean_equity")], debt_data[,c("Country", "mean_debt")], by="Country")
# Calculate the correlation
correlation <- cor(merged_data$mean_equity, merged_data$mean_debt, use="complete.obs")
correlation
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Extract the data for the 'Net Acquisition of Financial Assets' in 2020
data_2020 <- relevant_financial_metrics$X2020[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars"]
# Calculate statistics for the original data
mean_value <- mean(data_2020, na.rm = TRUE)
median_value <- median(data_2020, na.rm = TRUE)
max_value <- max(data_2020, na.rm = TRUE)
# Display the values
print(paste("Mean Value: ", mean_value))
print(paste("Median Value: ", median_value))
print(paste("Highest Value: ", max_value))
# Calculate statistics for the original data
Q1 <- quantile(data_2020, 0.25, na.rm = TRUE)
Q3 <- quantile(data_2020, 0.75, na.rm = TRUE)
IQR_value <- IQR(data_2020, na.rm = TRUE)
lower_whisker <- Q1 - 1.5 * IQR_value
upper_whisker <- Q3 + 1.5 * IQR_value
range_value <- range(data_2020, na.rm = TRUE)
outliers <- data_2020[data_2020 < lower_whisker | data_2020 > upper_whisker]
# Display the values
print(paste("Lower Whisker: ", lower_whisker))
print(paste("Q1 (First Quartile): ", Q1))
print(paste("Median: ", median(data_2020, na.rm = TRUE)))
print(paste("Q3 (Third Quartile): ", Q3))
print(paste("Upper Whisker: ", upper_whisker))
print(paste("IQR (Interquartile Range): ", IQR_value))
print(paste("Range: ", range_value[1], "to", range_value[2]))
print(paste("Number of Outliers: ", length(outliers)))
# Apply a log transformation to the data; adding a small constant to handle zeros or negative values
log_data_2020 <- log(data_2020 + max(abs(data_2020))*1.01)
# Calculate statistics for the transformed data
mean_log_value <- mean(log_data_2020, na.rm = TRUE)
median_log_value <- median(log_data_2020, na.rm = TRUE)
# Plotting the histogram
ggplot(data.frame(Value=log_data_2020), aes(x=Value)) +
geom_histogram(binwidth=0.05, fill="blue", alpha=0.7) +
geom_vline(aes(xintercept=mean_log_value), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median_log_value), color="green", linetype="dashed", size=1) +
annotate("text", x = mean_log_value + 1, y = 30, label = paste("Mean:", round(mean_log_value, 2))) +
annotate("text", x = median_log_value + 1, y = 20, label = paste("Median:", round(median_log_value, 2))) +
labs(title="Log-transformed Distribution of Net Acquisition of Financial Assets in 2020",
x="Log-transformed Net Acquisition of Financial Assets",
y="Number of Countries") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Plotting the boxplot
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
y="Log-transformed Net Acquisition of Financial Assets") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Determine the 1st and 3rd quartiles and IQR
Q1 <- quantile(log_data_2020, 0.25)
Q3 <- quantile(log_data_2020, 0.75)
IQR_value <- IQR(log_data_2020)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.shape=NA) +
geom_hline(yintercept = median(log_data_2020), linetype="dashed", color = "red", size=0.5) +  # Median line
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
x = "Net Acquisition of Financial Assets",
y="Log-transformed Net Acquisition of Financial Assets") +
theme_minimal() +
coord_cartesian(ylim=c(Q1 - 0.5*IQR_value, Q3 + 0.5*IQR_value))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Extracting data
supplementary_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Supplementary Items, Total Current + Capital Account, US Dollars", ]
financial_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars", ]
# Calculating averages for 2015-2020
supplementary_accnts_data$average <- rowMeans(supplementary_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
financial_accnts_data$average <- rowMeans(financial_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Combine the data for boxplot
boxplot_data <- data.frame(
Value = c(supplementary_accnts_data$average, financial_accnts_data$average),
Type = c(rep("Total Current + Capital Account", nrow(supplementary_accnts_data)),
rep("Net Acquisition of Financial Assets", nrow(financial_accnts_data)))
)
# Determine the 1st and 3rd quartiles and IQR for the y-axis limits
Q1_supplementary <- quantile(supplementary_accnts_data$average, 0.25, na.rm = TRUE)
Q3_supplementary <- quantile(supplementary_accnts_data$average, 0.75, na.rm = TRUE)
IQR_supplementary <- IQR(supplementary_accnts_data$average, na.rm = TRUE)
Q1_financial <- quantile(financial_accnts_data$average, 0.25, na.rm = TRUE)
Q3_financial <- quantile(financial_accnts_data$average, 0.75, na.rm = TRUE)
IQR_financial <- IQR(financial_accnts_data$average, na.rm = TRUE)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(boxplot_data, aes(x=Type, y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Comparison of Averages for 2015-2020",
y="Average Value",
x="Dataset") +
theme_minimal() +
coord_cartesian(ylim=c(min(Q1_supplementary - 1.5*IQR_supplementary, Q1_financial - 1.5*IQR_financial),
max(Q3_supplementary + 1.5*IQR_supplementary, Q3_financial + 1.5*IQR_financial)))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Extract the data for the 'Net Acquisition of Financial Assets' in 2020
data_2020 <- relevant_financial_metrics$X2020[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars"]
# Calculate statistics for the original data
mean_value <- mean(data_2020, na.rm = TRUE)
median_value <- median(data_2020, na.rm = TRUE)
max_value <- max(data_2020, na.rm = TRUE)
# Display the values
print(paste("Mean Value: ", mean_value))
print(paste("Median Value: ", median_value))
print(paste("Highest Value: ", max_value))
# Calculate statistics for the original data
Q1 <- quantile(data_2020, 0.25, na.rm = TRUE)
Q3 <- quantile(data_2020, 0.75, na.rm = TRUE)
IQR_value <- IQR(data_2020, na.rm = TRUE)
lower_whisker <- Q1 - 1.5 * IQR_value
upper_whisker <- Q3 + 1.5 * IQR_value
range_value <- range(data_2020, na.rm = TRUE)
outliers <- data_2020[data_2020 < lower_whisker | data_2020 > upper_whisker]
# Display the values
print(paste("Lower Whisker: ", lower_whisker))
print(paste("Q1 (First Quartile): ", Q1))
print(paste("Median: ", median(data_2020, na.rm = TRUE)))
print(paste("Q3 (Third Quartile): ", Q3))
print(paste("Upper Whisker: ", upper_whisker))
print(paste("IQR (Interquartile Range): ", IQR_value))
print(paste("Range: ", range_value[1], "to", range_value[2]))
print(paste("Number of Outliers: ", length(outliers)))
# Apply a log transformation to the data; adding a small constant to handle zeros or negative values
log_data_2020 <- log(data_2020 + max(abs(data_2020))*1.01)
# Calculate statistics for the transformed data
mean_log_value <- mean(log_data_2020, na.rm = TRUE)
median_log_value <- median(log_data_2020, na.rm = TRUE)
# Plotting the histogram
ggplot(data.frame(Value=log_data_2020), aes(x=Value)) +
geom_histogram(binwidth=0.05, fill="blue", alpha=0.7) +
geom_vline(aes(xintercept=mean_log_value), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median_log_value), color="green", linetype="dashed", size=1) +
annotate("text", x = mean_log_value + 1, y = 30, label = paste("Mean:", round(mean_log_value, 2))) +
annotate("text", x = median_log_value + 1, y = 20, label = paste("Median:", round(median_log_value, 2))) +
labs(title="Log-transformed Distribution of Net Acquisition of Financial Assets in 2020",
x="Log-transformed Net Acquisition of Financial Assets",
y="Number of Countries") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Plotting the boxplot
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
y="Log-transformed Net Acquisition of Financial Assets") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Determine the 1st and 3rd quartiles and IQR
Q1 <- quantile(log_data_2020, 0.25)
Q3 <- quantile(log_data_2020, 0.75)
IQR_value <- IQR(log_data_2020)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.shape=NA) +
geom_hline(yintercept = median(log_data_2020), linetype="dashed", color = "red", size=0.5) +  # Median line
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
x = "Net Acquisition of Financial Assets",
y="Log-transformed Net Acquisition of Financial Assets") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.5)) +
coord_cartesian(ylim=c(Q1 - 0.5*IQR_value, Q3 + 0.5*IQR_value))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Extract the data for the 'Net Acquisition of Financial Assets' in 2020
data_2020 <- relevant_financial_metrics$X2020[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars"]
# Calculate statistics for the original data
mean_value <- mean(data_2020, na.rm = TRUE)
median_value <- median(data_2020, na.rm = TRUE)
max_value <- max(data_2020, na.rm = TRUE)
# Display the values
print(paste("Mean Value: ", mean_value))
print(paste("Median Value: ", median_value))
print(paste("Highest Value: ", max_value))
# Calculate statistics for the original data
Q1 <- quantile(data_2020, 0.25, na.rm = TRUE)
Q3 <- quantile(data_2020, 0.75, na.rm = TRUE)
IQR_value <- IQR(data_2020, na.rm = TRUE)
lower_whisker <- Q1 - 1.5 * IQR_value
upper_whisker <- Q3 + 1.5 * IQR_value
range_value <- range(data_2020, na.rm = TRUE)
outliers <- data_2020[data_2020 < lower_whisker | data_2020 > upper_whisker]
# Display the values
print(paste("Lower Whisker: ", lower_whisker))
print(paste("Q1 (First Quartile): ", Q1))
print(paste("Median: ", median(data_2020, na.rm = TRUE)))
print(paste("Q3 (Third Quartile): ", Q3))
print(paste("Upper Whisker: ", upper_whisker))
print(paste("IQR (Interquartile Range): ", IQR_value))
print(paste("Range: ", range_value[1], "to", range_value[2]))
print(paste("Number of Outliers: ", length(outliers)))
# Apply a log transformation to the data; adding a small constant to handle zeros or negative values
log_data_2020 <- log(data_2020 + max(abs(data_2020))*1.01)
# Calculate statistics for the transformed data
mean_log_value <- mean(log_data_2020, na.rm = TRUE)
median_log_value <- median(log_data_2020, na.rm = TRUE)
# Plotting the histogram
ggplot(data.frame(Value=log_data_2020), aes(x=Value)) +
geom_histogram(binwidth=0.05, fill="blue", alpha=0.7) +
geom_vline(aes(xintercept=mean_log_value), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median_log_value), color="green", linetype="dashed", size=1) +
annotate("text", x = mean_log_value + 1, y = 30, label = paste("Mean:", round(mean_log_value, 2))) +
annotate("text", x = median_log_value + 1, y = 20, label = paste("Median:", round(median_log_value, 2))) +
labs(title="Log-transformed Distribution of Net Acquisition of Financial Assets in 2020",
x="Log-transformed Net Acquisition of Financial Assets",
y="Number of Countries") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Plotting the boxplot
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
y="Log-transformed Net Acquisition of Financial Assets") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Determine the 1st and 3rd quartiles and IQR
Q1 <- quantile(log_data_2020, 0.25)
Q3 <- quantile(log_data_2020, 0.75)
IQR_value <- IQR(log_data_2020)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.shape=NA) +
geom_hline(yintercept = median(log_data_2020), linetype="dashed", color = "red", size=0.5) +  # Median line
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
x = "Net Acquisition of Financial Assets",
y="Log-transformed Net Acquisition of Financial Assets") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.6, face = bold)) +
coord_cartesian(ylim=c(Q1 - 0.5*IQR_value, Q3 + 0.5*IQR_value))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Extract the data for the 'Net Acquisition of Financial Assets' in 2020
data_2020 <- relevant_financial_metrics$X2020[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars"]
# Calculate statistics for the original data
mean_value <- mean(data_2020, na.rm = TRUE)
median_value <- median(data_2020, na.rm = TRUE)
max_value <- max(data_2020, na.rm = TRUE)
# Display the values
print(paste("Mean Value: ", mean_value))
print(paste("Median Value: ", median_value))
print(paste("Highest Value: ", max_value))
# Calculate statistics for the original data
Q1 <- quantile(data_2020, 0.25, na.rm = TRUE)
Q3 <- quantile(data_2020, 0.75, na.rm = TRUE)
IQR_value <- IQR(data_2020, na.rm = TRUE)
lower_whisker <- Q1 - 1.5 * IQR_value
upper_whisker <- Q3 + 1.5 * IQR_value
range_value <- range(data_2020, na.rm = TRUE)
outliers <- data_2020[data_2020 < lower_whisker | data_2020 > upper_whisker]
# Display the values
print(paste("Lower Whisker: ", lower_whisker))
print(paste("Q1 (First Quartile): ", Q1))
print(paste("Median: ", median(data_2020, na.rm = TRUE)))
print(paste("Q3 (Third Quartile): ", Q3))
print(paste("Upper Whisker: ", upper_whisker))
print(paste("IQR (Interquartile Range): ", IQR_value))
print(paste("Range: ", range_value[1], "to", range_value[2]))
print(paste("Number of Outliers: ", length(outliers)))
# Apply a log transformation to the data; adding a small constant to handle zeros or negative values
log_data_2020 <- log(data_2020 + max(abs(data_2020))*1.01)
# Calculate statistics for the transformed data
mean_log_value <- mean(log_data_2020, na.rm = TRUE)
median_log_value <- median(log_data_2020, na.rm = TRUE)
# Plotting the histogram
ggplot(data.frame(Value=log_data_2020), aes(x=Value)) +
geom_histogram(binwidth=0.05, fill="blue", alpha=0.7) +
geom_vline(aes(xintercept=mean_log_value), color="red", linetype="dashed", size=1) +
geom_vline(aes(xintercept=median_log_value), color="green", linetype="dashed", size=1) +
annotate("text", x = mean_log_value + 1, y = 30, label = paste("Mean:", round(mean_log_value, 2))) +
annotate("text", x = median_log_value + 1, y = 20, label = paste("Median:", round(median_log_value, 2))) +
labs(title="Log-transformed Distribution of Net Acquisition of Financial Assets in 2020",
x="Log-transformed Net Acquisition of Financial Assets",
y="Number of Countries") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Plotting the boxplot
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
y="Log-transformed Net Acquisition of Financial Assets") +
theme(legend.position="right",
plot.title=element_text(hjust=0.5))
# Determine the 1st and 3rd quartiles and IQR
Q1 <- quantile(log_data_2020, 0.25)
Q3 <- quantile(log_data_2020, 0.75)
IQR_value <- IQR(log_data_2020)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(data.frame(Value=log_data_2020), aes(x="", y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.shape=NA) +
geom_hline(yintercept = median(log_data_2020), linetype="dashed", color = "red", size=0.5) +  # Median line
labs(title="Boxplot of Log-transformed Net Acquisition of Financial Assets in 2020",
x = "Net Acquisition of Financial Assets",
y="Log-transformed Net Acquisition of Financial Assets") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.6)) +
coord_cartesian(ylim=c(Q1 - 0.5*IQR_value, Q3 + 0.5*IQR_value))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Extracting data
supplementary_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Supplementary Items, Total Current + Capital Account, US Dollars", ]
financial_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars", ]
# Calculating averages for 2015-2020
supplementary_accnts_data$average <- rowMeans(supplementary_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
financial_accnts_data$average <- rowMeans(financial_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Combine the data for boxplot
boxplot_data <- data.frame(
Value = c(supplementary_accnts_data$average, financial_accnts_data$average),
Type = c(rep("Total Current + Capital Account", nrow(supplementary_accnts_data)),
rep("Net Acquisition of Financial Assets", nrow(financial_accnts_data)))
)
# Determine the 1st and 3rd quartiles and IQR for the y-axis limits
Q1_supplementary <- quantile(supplementary_accnts_data$average, 0.25, na.rm = TRUE)
Q3_supplementary <- quantile(supplementary_accnts_data$average, 0.75, na.rm = TRUE)
IQR_supplementary <- IQR(supplementary_accnts_data$average, na.rm = TRUE)
Q1_financial <- quantile(financial_accnts_data$average, 0.25, na.rm = TRUE)
Q3_financial <- quantile(financial_accnts_data$average, 0.75, na.rm = TRUE)
IQR_financial <- IQR(financial_accnts_data$average, na.rm = TRUE)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(boxplot_data, aes(x=Type, y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Comparison of Averages for 2015-2020",
y="Average Value",
x="Dataset") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.6)) +
coord_cartesian(ylim=c(min(Q1_supplementary - 1.5*IQR_supplementary, Q1_financial - 1.5*IQR_financial),
max(Q3_supplementary + 1.5*IQR_supplementary, Q3_financial + 1.5*IQR_financial)))
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Extracting data
supplementary_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Supplementary Items, Total Current + Capital Account, US Dollars", ]
financial_accnts_data <- relevant_financial_metrics[relevant_financial_metrics$Indicator == "Financial Account, Portfolio Investment, Net Acquisition of Financial Assets, US Dollars", ]
# Calculating averages for 2015-2020
supplementary_accnts_data$average <- rowMeans(supplementary_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
financial_accnts_data$average <- rowMeans(financial_accnts_data[, c("X2015", "X2016", "X2017", "X2018", "X2019", "X2020")], na.rm = TRUE)
# Combine the data for boxplot
boxplot_data <- data.frame(
Value = c(supplementary_accnts_data$average, financial_accnts_data$average),
Type = c(rep("Total Current + Capital Account", nrow(supplementary_accnts_data)),
rep("Net Acquisition of Financial Assets", nrow(financial_accnts_data)))
)
# Determine the 1st and 3rd quartiles and IQR for the y-axis limits
Q1_supplementary <- quantile(supplementary_accnts_data$average, 0.25, na.rm = TRUE)
Q3_supplementary <- quantile(supplementary_accnts_data$average, 0.75, na.rm = TRUE)
IQR_supplementary <- IQR(supplementary_accnts_data$average, na.rm = TRUE)
Q1_financial <- quantile(financial_accnts_data$average, 0.25, na.rm = TRUE)
Q3_financial <- quantile(financial_accnts_data$average, 0.75, na.rm = TRUE)
IQR_financial <- IQR(financial_accnts_data$average, na.rm = TRUE)
# Using ggplot2 to create a boxplot with customized y-axis limits
ggplot(boxplot_data, aes(x=Type, y=Value)) +
geom_boxplot(fill="lightblue", color="blue", outlier.color="red", outlier.shape=16) +
labs(title="Comparison of Averages for 2015-2020",
y="Average Value",
x="Attribute") +
theme_minimal() +
theme(plot.title=element_text(hjust=0.6)) +
coord_cartesian(ylim=c(min(Q1_supplementary - 1.5*IQR_supplementary, Q1_financial - 1.5*IQR_financial),
max(Q3_supplementary + 1.5*IQR_supplementary, Q3_financial + 1.5*IQR_financial)))
